{"Layers": ["/model.0/conv/Conv"
,"Reformatting CopyNode for Input Tensor 0 to PWN(PWN(/model.0/act/Sigmoid), /model.0/act/Mul)"
,"PWN(PWN(/model.0/act/Sigmoid), /model.0/act/Mul)"
,"/model.1/conv/Conv"
,"Reformatting CopyNode for Input Tensor 0 to PWN(PWN(/model.1/act/Sigmoid), /model.1/act/Mul)"
,"PWN(PWN(/model.1/act/Sigmoid), /model.1/act/Mul)"
,"/model.2/cv1/conv/Conv"
,"PWN(PWN(/model.2/cv1/act/Sigmoid), /model.2/cv1/act/Mul)"
,"/model.2/m.0/cv1/conv/Conv"
,"PWN(PWN(/model.2/m.0/cv1/act/Sigmoid), /model.2/m.0/cv1/act/Mul)"
,"/model.2/m.0/cv2/conv/Conv"
,"PWN(PWN(PWN(/model.2/m.0/cv2/act/Sigmoid), /model.2/m.0/cv2/act/Mul), /model.2/m.0/Add)"
,"/model.2/Split_output_0 copy"
,"/model.2/Split_output_1 copy"
,"/model.2/cv2/conv/Conv"
,"PWN(PWN(/model.2/cv2/act/Sigmoid), /model.2/cv2/act/Mul)"
,"/model.3/conv/Conv"
,"PWN(PWN(/model.3/act/Sigmoid), /model.3/act/Mul)"
,"/model.4/cv1/conv/Conv"
,"PWN(PWN(/model.4/cv1/act/Sigmoid), /model.4/cv1/act/Mul)"
,"/model.4/m.0/cv1/conv/Conv"
,"PWN(PWN(/model.4/m.0/cv1/act/Sigmoid), /model.4/m.0/cv1/act/Mul)"
,"/model.4/m.0/cv2/conv/Conv"
,"PWN(PWN(PWN(/model.4/m.0/cv2/act/Sigmoid), /model.4/m.0/cv2/act/Mul), /model.4/m.0/Add)"
,"/model.4/m.1/cv1/conv/Conv"
,"PWN(PWN(/model.4/m.1/cv1/act/Sigmoid), /model.4/m.1/cv1/act/Mul)"
,"/model.4/m.1/cv2/conv/Conv"
,"PWN(PWN(PWN(/model.4/m.1/cv2/act/Sigmoid), /model.4/m.1/cv2/act/Mul), /model.4/m.1/Add)"
,"/model.4/Split_output_0 copy"
,"/model.4/Split_output_1 copy"
,"/model.4/m.0/Add_output_0 copy"
,"/model.4/cv2/conv/Conv"
,"PWN(PWN(/model.4/cv2/act/Sigmoid), /model.4/cv2/act/Mul)"
,"Reformatting CopyNode for Output Tensor 0 to PWN(PWN(/model.4/cv2/act/Sigmoid), /model.4/cv2/act/Mul)"
,"/model.5/conv/Conv"
,"PWN(PWN(/model.5/act/Sigmoid), /model.5/act/Mul)"
,"/model.6/cv1/conv/Conv"
,"PWN(PWN(/model.6/cv1/act/Sigmoid), /model.6/cv1/act/Mul)"
,"/model.6/m.0/cv1/conv/Conv"
,"PWN(PWN(/model.6/m.0/cv1/act/Sigmoid), /model.6/m.0/cv1/act/Mul)"
,"/model.6/m.0/cv2/conv/Conv"
,"PWN(PWN(PWN(/model.6/m.0/cv2/act/Sigmoid), /model.6/m.0/cv2/act/Mul), /model.6/m.0/Add)"
,"/model.6/m.1/cv1/conv/Conv"
,"PWN(PWN(/model.6/m.1/cv1/act/Sigmoid), /model.6/m.1/cv1/act/Mul)"
,"/model.6/m.1/cv2/conv/Conv"
,"PWN(PWN(PWN(/model.6/m.1/cv2/act/Sigmoid), /model.6/m.1/cv2/act/Mul), /model.6/m.1/Add)"
,"/model.6/Split_output_0 copy"
,"/model.6/Split_output_1 copy"
,"/model.6/m.0/Add_output_0 copy"
,"/model.6/cv2/conv/Conv"
,"PWN(PWN(/model.6/cv2/act/Sigmoid), /model.6/cv2/act/Mul)"
,"/model.7/conv/Conv"
,"PWN(PWN(/model.7/act/Sigmoid), /model.7/act/Mul)"
,"/model.8/cv1/conv/Conv"
,"PWN(PWN(/model.8/cv1/act/Sigmoid), /model.8/cv1/act/Mul)"
,"/model.8/m.0/cv1/conv/Conv"
,"PWN(PWN(/model.8/m.0/cv1/act/Sigmoid), /model.8/m.0/cv1/act/Mul)"
,"/model.8/m.0/cv2/conv/Conv"
,"PWN(PWN(PWN(/model.8/m.0/cv2/act/Sigmoid), /model.8/m.0/cv2/act/Mul), /model.8/m.0/Add)"
,"/model.8/Split_output_0 copy"
,"/model.8/Split_output_1 copy"
,"/model.8/cv2/conv/Conv"
,"PWN(PWN(/model.8/cv2/act/Sigmoid), /model.8/cv2/act/Mul)"
,"/model.9/cv1/conv/Conv"
,"PWN(PWN(/model.9/cv1/act/Sigmoid), /model.9/cv1/act/Mul)"
,"Reformatting CopyNode for Output Tensor 0 to PWN(PWN(/model.9/cv1/act/Sigmoid), /model.9/cv1/act/Mul)"
,"/model.9/m/MaxPool"
,"/model.9/m_1/MaxPool"
,"/model.9/m_2/MaxPool"
,"/model.9/cv1/act/Mul_output_0 copy"
,"/model.9/m/MaxPool_output_0 copy"
,"/model.9/m_1/MaxPool_output_0 copy"
,"Reformatting CopyNode for Input Tensor 0 to /model.9/cv2/conv/Conv"
,"/model.9/cv2/conv/Conv"
,"Reformatting CopyNode for Input Tensor 0 to PWN(PWN(/model.9/cv2/act/Sigmoid), /model.9/cv2/act/Mul)"
,"PWN(PWN(/model.9/cv2/act/Sigmoid), /model.9/cv2/act/Mul)"
,"/model.10/Resize"
,"/model.10/Resize_output_0 copy"
,"/model.12/cv1/conv/Conv"
,"PWN(PWN(/model.12/cv1/act/Sigmoid), /model.12/cv1/act/Mul)"
,"/model.12/m.0/cv1/conv/Conv"
,"PWN(PWN(/model.12/m.0/cv1/act/Sigmoid), /model.12/m.0/cv1/act/Mul)"
,"/model.12/m.0/cv2/conv/Conv"
,"Reformatting CopyNode for Input Tensor 0 to PWN(PWN(/model.12/m.0/cv2/act/Sigmoid), /model.12/m.0/cv2/act/Mul)"
,"PWN(PWN(/model.12/m.0/cv2/act/Sigmoid), /model.12/m.0/cv2/act/Mul)"
,"/model.12/Split_output_0 copy"
,"/model.12/Split_output_1 copy"
,"/model.12/cv2/conv/Conv"
,"PWN(PWN(/model.12/cv2/act/Sigmoid), /model.12/cv2/act/Mul)"
,"/model.13/Resize"
,"/model.13/Resize_output_0 copy"
,"/model.15/cv1/conv/Conv"
,"PWN(PWN(/model.15/cv1/act/Sigmoid), /model.15/cv1/act/Mul)"
,"/model.15/m.0/cv1/conv/Conv"
,"PWN(PWN(/model.15/m.0/cv1/act/Sigmoid), /model.15/m.0/cv1/act/Mul)"
,"/model.15/m.0/cv2/conv/Conv"
,"PWN(PWN(/model.15/m.0/cv2/act/Sigmoid), /model.15/m.0/cv2/act/Mul)"
,"/model.15/Split_output_0 copy"
,"/model.15/Split_output_1 copy"
,"/model.15/cv2/conv/Conv"
,"PWN(PWN(/model.15/cv2/act/Sigmoid), /model.15/cv2/act/Mul)"
,"/model.16/conv/Conv"
,"PWN(PWN(/model.16/act/Sigmoid), /model.16/act/Mul)"
,"/model.12/cv2/act/Mul_output_0 copy"
,"/model.18/cv1/conv/Conv"
,"PWN(PWN(/model.18/cv1/act/Sigmoid), /model.18/cv1/act/Mul)"
,"/model.18/m.0/cv1/conv/Conv"
,"PWN(PWN(/model.18/m.0/cv1/act/Sigmoid), /model.18/m.0/cv1/act/Mul)"
,"/model.18/m.0/cv2/conv/Conv"
,"PWN(PWN(/model.18/m.0/cv2/act/Sigmoid), /model.18/m.0/cv2/act/Mul)"
,"/model.18/Split_output_0 copy"
,"/model.18/Split_output_1 copy"
,"/model.18/cv2/conv/Conv"
,"PWN(PWN(/model.18/cv2/act/Sigmoid), /model.18/cv2/act/Mul)"
,"/model.19/conv/Conv"
,"PWN(PWN(/model.19/act/Sigmoid), /model.19/act/Mul)"
,"/model.9/cv2/act/Mul_output_0 copy"
,"/model.21/cv1/conv/Conv"
,"PWN(PWN(/model.21/cv1/act/Sigmoid), /model.21/cv1/act/Mul)"
,"/model.21/m.0/cv1/conv/Conv"
,"PWN(PWN(/model.21/m.0/cv1/act/Sigmoid), /model.21/m.0/cv1/act/Mul)"
,"/model.21/m.0/cv2/conv/Conv"
,"PWN(PWN(/model.21/m.0/cv2/act/Sigmoid), /model.21/m.0/cv2/act/Mul)"
,"/model.21/Split_output_0 copy"
,"/model.21/Split_output_1 copy"
,"/model.21/cv2/conv/Conv"
,"PWN(PWN(/model.21/cv2/act/Sigmoid), /model.21/cv2/act/Mul)"
,"/model.22/cv2.0/cv2.0.0/conv/Conv || /model.22/cv3.0/cv3.0.0/conv/Conv"
,"PWN(PWN(/model.22/cv2.0/cv2.0.0/act/Sigmoid), /model.22/cv2.0/cv2.0.0/act/Mul)"
,"/model.22/cv2.0/cv2.0.1/conv/Conv"
,"PWN(PWN(/model.22/cv2.0/cv2.0.1/act/Sigmoid), /model.22/cv2.0/cv2.0.1/act/Mul)"
,"/model.22/cv2.0/cv2.0.2/Conv"
,"PWN(PWN(/model.22/cv3.0/cv3.0.0/act/Sigmoid), /model.22/cv3.0/cv3.0.0/act/Mul)"
,"/model.22/cv3.0/cv3.0.1/conv/Conv"
,"PWN(PWN(/model.22/cv3.0/cv3.0.1/act/Sigmoid), /model.22/cv3.0/cv3.0.1/act/Mul)"
,"/model.22/cv3.0/cv3.0.2/Conv"
,"/model.22/cv2.1/cv2.1.0/conv/Conv || /model.22/cv3.1/cv3.1.0/conv/Conv"
,"PWN(PWN(/model.22/cv2.1/cv2.1.0/act/Sigmoid), /model.22/cv2.1/cv2.1.0/act/Mul)"
,"/model.22/cv2.1/cv2.1.1/conv/Conv"
,"PWN(PWN(/model.22/cv2.1/cv2.1.1/act/Sigmoid), /model.22/cv2.1/cv2.1.1/act/Mul)"
,"/model.22/cv2.1/cv2.1.2/Conv"
,"PWN(PWN(/model.22/cv3.1/cv3.1.0/act/Sigmoid), /model.22/cv3.1/cv3.1.0/act/Mul)"
,"/model.22/cv3.1/cv3.1.1/conv/Conv"
,"PWN(PWN(/model.22/cv3.1/cv3.1.1/act/Sigmoid), /model.22/cv3.1/cv3.1.1/act/Mul)"
,"/model.22/cv3.1/cv3.1.2/Conv"
,"/model.22/cv2.2/cv2.2.0/conv/Conv || /model.22/cv3.2/cv3.2.0/conv/Conv"
,"PWN(PWN(/model.22/cv2.2/cv2.2.0/act/Sigmoid), /model.22/cv2.2/cv2.2.0/act/Mul)"
,"/model.22/cv2.2/cv2.2.1/conv/Conv"
,"PWN(PWN(/model.22/cv2.2/cv2.2.1/act/Sigmoid), /model.22/cv2.2/cv2.2.1/act/Mul)"
,"/model.22/cv2.2/cv2.2.2/Conv"
,"PWN(PWN(/model.22/cv3.2/cv3.2.0/act/Sigmoid), /model.22/cv3.2/cv3.2.0/act/Mul)"
,"/model.22/cv3.2/cv3.2.1/conv/Conv"
,"PWN(PWN(/model.22/cv3.2/cv3.2.1/act/Sigmoid), /model.22/cv3.2/cv3.2.1/act/Mul)"
,"/model.22/cv3.2/cv3.2.2/Conv"
,"/model.22/Reshape"
,"/model.22/Reshape_copy_output"
,"/model.22/Reshape_1"
,"/model.22/Reshape_1_copy_output"
,"/model.22/Reshape_2"
,"/model.22/Reshape_2_copy_output"
,"/model.22/dfl/Reshape + /model.22/dfl/Transpose"
,"/model.22/dfl/Softmax"
,"/model.22/dfl/conv/Conv"
,"/model.22/dfl/Reshape_1"
,"/model.22/Constant_9_output_0"
,"/model.22/Constant_9_output_0_clone_1"
,"/model.22/Sub"
,"/model.22/Add_1"
,"PWN(/model.22/Constant_11_output_0 + (Unnamed Layer* 239) [Shuffle], PWN(/model.22/Add_2, /model.22/Div_1))"
,"Reformatting CopyNode for Output Tensor 0 to PWN(/model.22/Constant_11_output_0 + (Unnamed Layer* 239) [Shuffle], PWN(/model.22/Add_2, /model.22/Div_1))"
,"/model.22/Sub_1"
,"/model.22/Constant_12_output_0 + (Unnamed Layer* 244) [Shuffle]"
,"/model.22/Mul_2"
,"Reformatting CopyNode for Input Tensor 0 to PWN(/model.22/Sigmoid)"
,"PWN(/model.22/Sigmoid)"
,"Reformatting CopyNode for Output Tensor 0 to PWN(/model.22/Sigmoid)"
,"(Unnamed Layer* 248) [Shuffle]"
,"(Unnamed Layer* 249) [Slice]"
,"(Unnamed Layer* 250) [Slice]"
,"NMS"
,"Reformatting CopyNode for Input Tensor 0 to AddScalar"
,"AddScalar"
,"Reformatting CopyNode for Output Tensor 0 to AddScalar"
],
"Bindings": ["image_arrays"
,"num"
,"boxes"
,"classes"
,"scores"
]}
